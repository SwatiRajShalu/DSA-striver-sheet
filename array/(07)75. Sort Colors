//-----------------------------------------------------------------------------------SOLUTION 1-------------------------------------------------------------------
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int a=0, b=0, c=0;
        for(auto it:nums){
            if(it==0) a++;
            else if(it==1) b++;
            else if(it==2) c++;
        }
        
        int index=0;
        while(a--) {nums[index++]=0;}
        while(b--) {nums[index++]=1;}
        while(c--) {nums[index++]=2;}
        
    }
};
// tc=0(n)+0(x)+0(y)+0(z)=0(2n)=0(n)

//-------------------------------------------------------------------------------SOLUTION 2-------3 pointer approach--------------------

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int i=0,j=0,r=nums.size()-1;
        
        while(i<=r){
            if(nums[i]==0){
                swap(nums[i],nums[j]);
                j++;
                i++;
            }
            else if(nums[i]==1){
                i++;
            }
            else if(nums[i]==2){
                swap(nums[i],nums[r]);
                r--;
            }
        }        
    }
};
// tc=0(n)
