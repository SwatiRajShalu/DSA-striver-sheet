//link:https://leetcode.com/problems/sum-of-beauty-of-all-substrings/description/
//method1------------------------------------------------------------------------------------tc:0(n^3)
class Solution {
public:
    int beauty( vector<int> mp){
        int maxf=-1;
        int minf=INT_MAX;

        for(auto it: mp){
            maxf=max(maxf,it);
            if(it>=1)
            minf=min(minf,it);
        }
        
        return maxf-minf;
    }
    int beautySum(string s) {

        int ans=0;// to store each count of beauty
       //first i will trase all the substrings 
       //we will need 2 loops for that time complexity: 0(n^2) for this

       for(int i=0;i<s.size();i++){
        // i want to get the beauty count of each substring formed
        //thus i will need map/vector data structure for it
        vector<int> mp(26,0);
        for(int j=i;j<s.size();j++){
           mp[s[j]-'a']++;
           ans=ans+beauty(mp); //this will take extra 0(n) time complexity
        }
       }
        return ans;
    } 
};

//total time complexity: o(n^3)
//space complexity: 0(n)

