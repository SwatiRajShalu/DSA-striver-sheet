//link:
//---------------------------------method 1 -----------sort both and then compare both------------------------

//--------------------------------method 2-----------------------map (hash table)-----------------time complexity: 0(n)----------space complexity: 0(1)

class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false;
        unordered_map<char,int> mp;//char and its frequency

        for(int i=0;i<s.size();i++){
            mp[s[i]]++;
        }

        for(int i=0;i<t.size();i++){
            if(mp.find(t[i])!=mp.end() && mp[t[i]]>0){
                mp[t[i]]--;
            }else return false;
        }

        return true;
    }
};
