//link:https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
       vector<vector<int>> ans;
       if(root==NULL) return ans;
       queue<TreeNode*> q;
       q.push(root);

       int turn=0;// if turn=0 dont reverse , turn=1 reverse

       while(!q.empty()){
         vector<int> sub_ans;
         int len=q.size();
         for(int i=0;i<len;i++){
            TreeNode* top=q.front();
            q.pop();
            sub_ans.push_back(top->val);
            if(top->left) q.push(top->left);
            if(top->right) q.push(top->right);
         }
         if(turn==1){
            reverse(sub_ans.begin(),sub_ans.end());
            turn=0;
         }else turn=1;
         ans.push_back(sub_ans);
       }
       return ans;
    }
};

//tc: 0(N)
//sc: 0(N)
