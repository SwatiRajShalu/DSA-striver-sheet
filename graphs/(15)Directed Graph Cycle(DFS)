//link:https://www.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1

class Solution {
    bool dfs(int vertex,vector<int>&visit,vector<int>&pathvisit,vector<int> adj[]){
        visit[vertex]=1;
        pathvisit[vertex]=1;
        
        for(auto it:adj[vertex]){
            if(visit[it]==0){
                if(dfs(it,visit,pathvisit,adj)==false) return false;
            }else if(pathvisit[it]==pathvisit[vertex]) return false;
        }
        pathvisit[vertex]=0;
        return true;
    }
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int v, vector<int> adj[]) {
        vector<int> visit(v,0);
        vector<int> pathvisit(v,0);
        
        //for not connected components:
        
        for(int i=0;i<v;i++){
            if(visit[i]==0){
                if(dfs(i,visit,pathvisit,adj)==false) return true;
            }
        }
        return false;
    }
};

//time complexity: 0(V+2E)
//space complexity: 0(2V)
